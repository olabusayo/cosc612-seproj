rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
   	// for the student table
    match /students/{student} {
    	allow read, update, delete: if request.auth.uid == student;
      allow create: if request.auth.uid != null && request.auth.token.email_verified;
    }
    //for teacher table
    match /teachers/{teacher} {
    	allow read, update, delete: if request.auth.uid != null && request.auth.uid == teacher;
      allow create: if request.auth.uid != null;
    }
  	//for class table
    match /classes/{class} {
    	// write granted for teachers; read for any signed in user
    	allow create, update, delete: if exists(/databases/$(database)/documents/teachers/$(request.auth.uid)) && request.auth.token.email == request.resource.data.teacher_email && request.auth.token.email_verified;
      allow read: if request.auth.uid != null;
    }
    //for class roster table
    match /class_roster/{class} {
    	// only teachers can create classes, everyone can read, update or delete though
    	allow create: if exists(/databases/$(database)/documents/teachers/$(request.auth.uid)) && request.auth.token.email == request.resource.data.teacher_email && request.auth.token.email_verified;
      allow read, update, delete: if request.auth.uid != null;
    }
  	//for subscription requests table
    match /subscription_requests/{class} {
    //anyone can read or write (student adding request, teacher deleting or updating request)
      allow read, write: if request.auth.uid != null;
    }
  }
}